from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from locators.locators import SearchResultsLocators, FilterPanelLocators
import time
from utils.utils import retry_click, retry_send_keys


class SearchResultsPage:
    def __init__(self, browser):
        self.browser = browser

    def get_products_count(self):
        products = WebDriverWait(self.browser, 10).until(
            EC.visibility_of_any_elements_located(SearchResultsLocators.PRODUCT_CARD)
        )
        return len(products)

    def wait_for_products(self, locator, timeout=10):
        return WebDriverWait(self.browser, timeout).until(
            EC.visibility_of_any_elements_located(locator)
        )

    def select_size_m(self):
        print("‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤...")
        filter_panel = WebDriverWait(self.browser, 15).until(
            EC.presence_of_element_located(FilterPanelLocators.FILTER_PANEL)
        )
        print("‚úÖ –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")

        # 1. –°–∫—Ä–æ–ª–ª–∏–º –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "–†–∞–∑–º–µ—Ä"
        size_filter_title = WebDriverWait(filter_panel, 10).until(
            lambda panel: panel.find_element(*FilterPanelLocators.SIZE_FILTER_SCROLL_TARGET)
        )
        self.browser.execute_script("""
            arguments[0].scrollTop = arguments[1].offsetTop - arguments[0].offsetTop;
        """, filter_panel, size_filter_title)
        print("üìú –í—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–∫—Ä–æ–ª–ª –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞")

        time.sleep(0.3)

        # 2. –ö–ª–∏–∫–∞–µ–º –ø–æ —Å—Ç—Ä–µ–ª–æ—á–∫–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–º–µ—Ä–æ–≤
        retry_click(lambda: WebDriverWait(self.browser, 10).until(
            EC.element_to_be_clickable(FilterPanelLocators.SIZE_COLLAPSE_ICON)
        ))
        print("üëÜ –û—Ç–∫—Ä—ã–ª–∏ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–º–µ—Ä–æ–≤")

        time.sleep(0.3)

        # 3. –ó–∞–Ω–æ–≤–æ –Ω–∞—Ö–æ–¥–∏–º –ø–∞–Ω–µ–ª—å –∏ —á–µ–∫–±–æ–∫—Å M
        filter_panel = WebDriverWait(self.browser, 10).until(
            EC.presence_of_element_located(FilterPanelLocators.FILTER_PANEL)
        )
        size_checkbox = WebDriverWait(filter_panel, 10).until(
            lambda panel: panel.find_element(*FilterPanelLocators.M_SIZE_CHECKBOX)
        )

        self.browser.execute_script("arguments[0].scrollIntoView({block: 'center'});", size_checkbox)
        print("üìú –ü—Ä–æ—Å–∫—Ä–æ–ª–ª–∏–ª–∏ –¥–æ —á–µ–∫–±–æ–∫—Å–∞ —Ä–∞–∑–º–µ—Ä–∞ M")

        time.sleep(0.3)

        # 4. –ö–ª–∏–∫–∞–µ–º –ø–æ —á–µ–∫–±–æ–∫—Å—É —Å —Ä–µ—Ç—Ä–∞–µ–º
        retry_click(lambda: WebDriverWait(self.browser, 10).until(
            EC.presence_of_element_located(FilterPanelLocators.M_SIZE_CHECKBOX)
        ))
        print("üëÜ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —á–µ–∫–±–æ–∫—Å—É —Ä–∞–∑–º–µ—Ä–∞ M")

        # 5. –î–æ–∂–∏–¥–∞–µ–º—Å—è, –ø–æ–∫–∞ –æ–Ω —Ä–µ–∞–ª—å–Ω–æ —Å—Ç–∞–Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–º
        WebDriverWait(self.browser, 10).until(
            lambda d: 'filtreler=bedenler:M' in d.current_url
        )

    def select_price(self):
        print("‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤...")
        filter_panel = WebDriverWait(self.browser, 15).until(
            EC.presence_of_element_located(FilterPanelLocators.FILTER_PANEL)
        )
        print("‚úÖ –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")

        # 1. –°–∫—Ä–æ–ª–ª–∏–º –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "—Ü–µ–Ω–∞"
        price_filter_title = WebDriverWait(filter_panel, 10).until(
            lambda panel: panel.find_element(*FilterPanelLocators.PRICE_FILTER_SCROLL_TARGET)
        )
        self.browser.execute_script("""
            arguments[0].scrollTop = arguments[1].offsetTop - arguments[0].offsetTop;
        """, filter_panel, price_filter_title)
        print("üìú –í—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–∫—Ä–æ–ª–ª –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —Ü–µ–Ω—ã")

        time.sleep(0.3)

        # 2. –ö–ª–∏–∫–∞–µ–º –ø–æ —Å—Ç—Ä–µ–ª–æ—á–∫–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å —Ü–µ–Ω—É
        retry_click(lambda: WebDriverWait(self.browser, 10).until(
            EC.element_to_be_clickable(FilterPanelLocators.PRICE_COLLAPSE_ICON)
        ))
        print("üëÜ –û—Ç–∫—Ä—ã–ª–∏ —Å–ø–∏—Å–æ–∫ —Ü–µ–Ω")

        time.sleep(0.3)

        # 3. –ó–∞–Ω–æ–≤–æ –Ω–∞—Ö–æ–¥–∏–º –ø–∞–Ω–µ–ª—å –∏ –∏–Ω–ø—É—Ç —Ü–µ–Ω
        filter_panel = WebDriverWait(self.browser, 10).until(
            EC.presence_of_element_located(FilterPanelLocators.FILTER_PANEL)
        )
        price_from_input = WebDriverWait(filter_panel, 10).until(
            lambda panel: panel.find_element(*FilterPanelLocators.PRICE_FROM_INPUT)
        )

        self.browser.execute_script("arguments[0].scrollIntoView({block: 'center'});", price_from_input)
        print("üìú –ü—Ä–æ—Å–∫—Ä–æ–ª–ª–∏–ª–∏ –¥–æ –∏–Ω–ø—É—Ç–∞ –û–¢")

        time.sleep(0.3)

        retry_send_keys(
            lambda: WebDriverWait(self.browser, 10).until(
                EC.presence_of_element_located(FilterPanelLocators.PRICE_FROM_INPUT)
            ),
            "800"
        )

        retry_send_keys(
            lambda: WebDriverWait(self.browser, 10).until(
                EC.presence_of_element_located(FilterPanelLocators.PRICE_TO_INPUT)
            ),
            "1200"
        )

        retry_click(lambda: WebDriverWait(self.browser, 10).until(
            EC.presence_of_element_located(FilterPanelLocators.PRICE_APPLY_BUTTON)
        ))

        # 5. –î–æ–∂–∏–¥–∞–µ–º—Å—è, –ø–æ–∫–∞ —Ü–µ–Ω–∞ —Ä–µ–∞–ª—å–Ω–æ —Å—Ç–∞–Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π
        WebDriverWait(self.browser, 10).until(
            lambda d: 'fiyat:800-1200' in d.current_url
        )

    def select_fabric(self):
        print("‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤...")
        filter_panel = WebDriverWait(self.browser, 15).until(
            EC.presence_of_element_located(FilterPanelLocators.FILTER_PANEL)
        )
        print("‚úÖ –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")

        # 1. –°–∫—Ä–æ–ª–ª–∏–º –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "–¢–ò–ü –¢–ö–ê–ù–ò"
        fabric_filter_title = WebDriverWait(filter_panel, 10).until(
            lambda panel: panel.find_element(*FilterPanelLocators.FABRIC_FILTER_SCROLL_TARGET)
        )
        self.browser.execute_script("""
            arguments[0].scrollTop = arguments[1].offsetTop - arguments[0].offsetTop;
        """, filter_panel, fabric_filter_title)
        print("üìú –í—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–∫—Ä–æ–ª–ª –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —Ç–∫–∞–Ω–∏")

        time.sleep(0.3)

        # 2. –ö–ª–∏–∫–∞–µ–º –ø–æ —Å—Ç—Ä–µ–ª–æ—á–∫–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ —Ç–∫–∞–Ω–∏
        retry_click(lambda: WebDriverWait(self.browser, 10).until(
            EC.element_to_be_clickable(FilterPanelLocators.FABRIC_COLLAPSE_ICON)
        ))
        print("üëÜ –û—Ç–∫—Ä—ã–ª–∏ —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ —Ç–∫–∞–Ω–∏")

        time.sleep(0.3)

        # 3. –ó–∞–Ω–æ–≤–æ –Ω–∞—Ö–æ–¥–∏–º –ø–∞–Ω–µ–ª—å –∏ —Ç–∏–ø pamuk
        filter_panel = WebDriverWait(self.browser, 10).until(
            EC.presence_of_element_located(FilterPanelLocators.FILTER_PANEL)
        )
        fabric_checkbox = WebDriverWait(filter_panel, 10).until(
            lambda panel: panel.find_element(*FilterPanelLocators.PAMUK_CHECKBOX)
        )

        self.browser.execute_script("arguments[0].scrollIntoView({block: 'center'});", fabric_checkbox)
        print("üìú –ü—Ä–æ—Å–∫—Ä–æ–ª–ª–∏–ª–∏ –¥–æ —á–µ–∫–±–æ–∫—Å–∞ PAMUK")

        time.sleep(0.3)

        # 4. –ö–ª–∏–∫–∞–µ–º –ø–æ —á–µ–∫–±–æ–∫—Å—É —Å —Ä–µ—Ç—Ä–∞–µ–º
        retry_click(lambda: WebDriverWait(self.browser, 10).until(
            EC.presence_of_element_located(FilterPanelLocators.PAMUK_CHECKBOX)
        ))
        print("üëÜ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —á–µ–∫–±–æ–∫—Å—É —Ç–∏–ø pamuk")

        # 5. –î–æ–∂–∏–¥–∞–µ–º—Å—è, –ø–æ–∫–∞ –æ–Ω —Ä–µ–∞–ª—å–Ω–æ —Å—Ç–∞–Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–º
        WebDriverWait(self.browser, 10).until(
            lambda d: 'Tipi:Pamuk' in d.current_url
        )




